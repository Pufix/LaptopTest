{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\AppData\\\\Roaming\\\\mpp\\\\src\\\\contexts\\\\usercontext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport React, { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar username = \"ceapa\";\nvar password;\nvar token;\nfunction login(setLoggedIn) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      onChange: e => username = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      onChange: e => password = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        fetch('http://127.0.0.1:5000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        }).then(response => {\n          if (!response.ok) {\n            console.log(\"FAILED TO LOGIN\");\n          } else {\n            response.json().then(data => {\n              token = data.token;\n              setLoggedIn(true);\n            });\n          }\n        });\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\nfunction register() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\nfunction exterior(children, setLoggedIn) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Logged as \", username, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLoggedIn(false),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\nexport function UserContext({\n  children\n}) {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loggedIn ? exterior(children, setLoggedIn) : login(setLoggedIn)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(UserContext, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserContext\");","map":{"version":3,"names":["createContext","useEffect","useState","React","useContext","jsxDEV","_jsxDEV","username","password","token","login","setLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","fetch","method","headers","body","JSON","stringify","then","response","ok","console","log","json","data","register","exterior","UserContext","_s","loggedIn","_c","$RefreshReg$"],"sources":["C:/Users/Alex/AppData/Roaming/mpp/src/contexts/usercontext.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\nimport React,{ useContext } from 'react';\r\n\r\nvar username = \"ceapa\";\r\nvar password;\r\nvar token;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction login (setLoggedIn){\r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <input type=\"text\" placeholder=\"username\" onChange={(e) => username = e.target.value}></input>\r\n            <input type=\"password\" placeholder=\"password\" onChange={(e) => password = e.target.value}></input>\r\n            <button onClick={() => {\r\n                fetch('http://127.0.0.1:5000/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({username: username, password: password}),\r\n                }).then((response) => {\r\n                    if (!response.ok){\r\n                        console.log(\"FAILED TO LOGIN\");\r\n                    }else{\r\n                        response.json().then((data) => {\r\n                            token = data.token;\r\n                            setLoggedIn(true);\r\n                        });\r\n                    }\r\n                });\r\n            }}>\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nfunction register (){\r\n    return(\r\n        <div>\r\n            <h1>Logout</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction exterior(children, setLoggedIn ){\r\n\r\n    return(\r\n        <div>\r\n            Logged as {username}<button onClick={() => setLoggedIn(false)}>Logout</button>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\nexport function UserContext({children}){\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    return(\r\n        <div>\r\n            {loggedIn ? exterior(children, setLoggedIn) : login(setLoggedIn)} \r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}