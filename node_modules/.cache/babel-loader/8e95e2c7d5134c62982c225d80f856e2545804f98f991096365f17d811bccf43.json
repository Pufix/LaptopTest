{"ast":null,"code":"import{createContext,useEffect,useState}from'react';import Laptop from\"../classes/laptop\";import Manufacturer from\"../classes/manufacturer\";import React,{useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const LaptopContext=/*#__PURE__*/createContext();export function ServerState(){const serverResponse=useContext(LaptopContext);return serverResponse;}export function SetServerResponse(){const setServerResponse=useContext(LaptopContext);return setServerResponse;}export function LaptopArray(){const laptopArray=useContext(LaptopContext);return laptopArray.laptopArray;}export function AddLaptop(){const addLaptop=useContext(LaptopContext);return addLaptop.addLaptop;}export function RemoveLaptop(){const removeLaptop=useContext(LaptopContext);return removeLaptop.removeLaptop;}export function Manufacturers(){const manufacturers=useContext(LaptopContext);return manufacturers.manufacturers;}export function AddManufacturer(){const addManufacturer=useContext(LaptopContext);return addManufacturer.addManufacturer;}export function RemoveManufacturer(){const removeManufacturer=useContext(LaptopContext);return removeManufacturer.removeManufacturer;}export function LaptopProvider(_ref){let{children}=_ref;const[laptopArray,setLaptops]=useState([]);const[serverResponse,setServerResponse]=useState(true);const[manufacturers,setManufacturers]=useState([]);useEffect(()=>{const fetchManufacturers=async()=>{const response=await fetch('http://127.0.0.1:5000/manufacturers');if(!response.ok){setServerResponse(false);console.log(\"FAILED TO FETCH\");throw new Error('Failed to fetch data');}response.json().then(data=>{data.forEach(manufacturer=>{const newManufacturer=new Manufacturer(manufacturer.id,manufacturer.name);setManufacturers(prevManufacturers=>[...prevManufacturers,newManufacturer]);});});};const fetchData=async()=>{const response=await fetch('http://127.0.0.1:5000/laptops');if(!response.ok){setServerResponse(false);console.log(\"FAILED TO FETCH\");throw new Error('Failed to fetch data');}response.json().then(data=>{data.forEach(laptop=>{const newLaptop=new Laptop(laptop.id,laptop.name,laptop.cpu,laptop.gpu,laptop.ram,laptop.storage,laptop.price,laptop.manufacturer_id);setLaptops(prevLaptops=>[...prevLaptops,newLaptop]);});});};const testServer=async()=>{const timeout=setTimeout(()=>{console.log('Server is down');setServerResponse(false);},3000);const response=await fetch('http://127.0.0.1:5000/test').then(()=>{console.log('Server is up');setServerResponse(true);clearTimeout(timeout);fetchData();fetchManufacturers();}).catch(()=>{console.log('Server is down');setServerResponse(false);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Server is down\"})});});};testServer();},[]);const addLaptop=laptop=>{setLaptops(prevLaptops=>[...prevLaptops,laptop]);};const removeLaptop=id=>{setLaptops(prevLaptops=>prevLaptops.filter(laptop=>laptop.getId()!==id));};const addManufacturer=manufacturer=>{setManufacturers(prevManufacturers=>[...prevManufacturers,manufacturer]);};const removeManufacturer=id=>{setManufacturers(prevManufacturers=>prevManufacturers.filter(manufacturer=>manufacturer.getId()!==id));};return/*#__PURE__*/_jsxs(LaptopContext.Provider,{value:{laptopArray,addLaptop,removeLaptop,serverResponse,setServerResponse,addManufacturer,removeManufacturer,manufacturers},children:[serverResponse?null:/*#__PURE__*/_jsx(\"h1\",{style:{color:'red'},children:\"Server is down\"}),children]});}","map":{"version":3,"names":["createContext","useEffect","useState","Laptop","Manufacturer","React","useContext","jsx","_jsx","jsxs","_jsxs","LaptopContext","ServerState","serverResponse","SetServerResponse","setServerResponse","LaptopArray","laptopArray","AddLaptop","addLaptop","RemoveLaptop","removeLaptop","Manufacturers","manufacturers","AddManufacturer","addManufacturer","RemoveManufacturer","removeManufacturer","LaptopProvider","_ref","children","setLaptops","setManufacturers","fetchManufacturers","response","fetch","ok","console","log","Error","json","then","data","forEach","manufacturer","newManufacturer","id","name","prevManufacturers","fetchData","laptop","newLaptop","cpu","gpu","ram","storage","price","manufacturer_id","prevLaptops","testServer","timeout","setTimeout","clearTimeout","catch","filter","getId","Provider","value","style","color"],"sources":["C:/Users/Alex/AppData/Roaming/mpp/src/contexts/laptopcontext.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\nimport Laptop from \"../classes/laptop\";\nimport Manufacturer from \"../classes/manufacturer\";\nimport React,{ useContext } from 'react';\n\nexport const LaptopContext = createContext();\n\nexport function ServerState(){\n    const serverResponse = useContext(LaptopContext);\n    return serverResponse;\n}\n\nexport function SetServerResponse(){\n    const setServerResponse = useContext(LaptopContext);\n    return setServerResponse;\n}\n\nexport function LaptopArray(){\n    const laptopArray = useContext(LaptopContext);\n    return laptopArray.laptopArray;\n}\n\nexport function AddLaptop(){\n    const addLaptop = useContext(LaptopContext);\n    return addLaptop.addLaptop;\n}\n\nexport function RemoveLaptop(){\n    const removeLaptop = useContext(LaptopContext);\n    return removeLaptop.removeLaptop;\n}\n\nexport function Manufacturers(){\n    const manufacturers = useContext(LaptopContext);\n    return manufacturers.manufacturers;\n}\n\nexport function AddManufacturer(){\n    const addManufacturer = useContext(LaptopContext);\n    return addManufacturer.addManufacturer;\n}\n\nexport function RemoveManufacturer(){\n    const removeManufacturer = useContext(LaptopContext);\n    return removeManufacturer.removeManufacturer;\n}\n\n\n\n\nexport function LaptopProvider({ children }) {\n    const [laptopArray, setLaptops] = useState([]);\n    const [serverResponse, setServerResponse] = useState(true);\n    const [manufacturers, setManufacturers] = useState([]);\n    useEffect(() =>{\n        const fetchManufacturers = async () => {\n            const response = await fetch('http://127.0.0.1:5000/manufacturers');\n            if (!response.ok) {\n                setServerResponse(false);\n                console.log(\"FAILED TO FETCH\");\n                throw new Error('Failed to fetch data');\n            }\n            response.json().then(data => {\n                data.forEach((manufacturer) => {\n                    const newManufacturer = new Manufacturer(manufacturer.id, manufacturer.name);\n                    setManufacturers(prevManufacturers => [...prevManufacturers, newManufacturer]);\n                });\n            });\n            \n        }\n                \n        const fetchData = async () => {\n            const response = await fetch('http://127.0.0.1:5000/laptops');\n            if (!response.ok) {\n                setServerResponse(false);\n                console.log(\"FAILED TO FETCH\");\n                throw new Error('Failed to fetch data');\n            }\n            response.json().then(data => {\n                data.forEach((laptop) => {\n                    const newLaptop = new Laptop(laptop.id, laptop.name, laptop.cpu, laptop.gpu, laptop.ram, laptop.storage, laptop.price, laptop.manufacturer_id);\n                    setLaptops(prevLaptops => [...prevLaptops, newLaptop]);\n                });\n            });\n        }\n        const testServer = async () => {\n            const timeout = setTimeout(() => {\n                console.log('Server is down');\n                setServerResponse(false);\n            }, 3000);\n            const response = await fetch('http://127.0.0.1:5000/test')\n                .then(() => {\n                    console.log('Server is up');\n                    setServerResponse(true);\n                    clearTimeout(timeout);\n                    fetchData();\n                    fetchManufacturers();\n                })\n                .catch(() => {\n                    console.log('Server is down');\n                    setServerResponse(false);\n                    return (\n                        <div>\n                            <h1>Server is down</h1>\n                        </div>\n                    );\n                });\n        }\n        testServer();\n    }, []);\n    \n    const addLaptop = (laptop) => {\n        setLaptops(prevLaptops => [...prevLaptops, laptop]);\n    };\n\n    const removeLaptop = (id) => {\n        setLaptops(prevLaptops => prevLaptops.filter((laptop) => laptop.getId() !== id));\n    };\n\n    const addManufacturer = (manufacturer) => {\n        setManufacturers(prevManufacturers => [...prevManufacturers, manufacturer]);\n    };\n\n    const removeManufacturer = (id) => {\n        setManufacturers(prevManufacturers => prevManufacturers.filter((manufacturer) => manufacturer.getId() !== id));\n    };\n    \n\n    return (\n        <LaptopContext.Provider value={{ laptopArray, addLaptop, removeLaptop, serverResponse, setServerResponse, addManufacturer, removeManufacturer, manufacturers }}>\n            {serverResponse ? null : <h1 style={{color: 'red'}}>Server is down</h1>}\n            {children}\n        </LaptopContext.Provider>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}